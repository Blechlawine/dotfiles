{
    // Place your global snippets here. Each snippet is defined under a snippet name and has a scope, prefix, body and
    // description. Add comma separated ids of the languages where the snippet is applicable in the scope field. If scope
    // is left empty or omitted, the snippet gets applied to all languages. The prefix is what is
    // used to trigger the snippet and the body will be expanded and inserted. Possible variables are:
    // $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders.
    // Placeholders with the same ids are connected.
    // Example:
    // "Print to console": {
    // 	"scope": "javascript,typescript",
    // 	"prefix": "log",
    // 	"body": [
    // 		"console.log('$1');",
    // 		"$2"
    // 	],
    // 	"description": "Log output to console"
    // }
    "biome.json": {
        "scope": "json",
        "prefix": "biome.json",
        "body": [
            "{",
            "    \"$schema\": \"./node_modules/@biomejs/biome/configuration_schema.json\",",
            "    \"formatter\": {",
            "        \"indentSize\": 4,",
            "        \"indentStyle\": \"space\",",
            "        \"lineWidth\": 120,",
            "        \"formatWithErrors\": true,",
            "    },",
            "    \"linter\": {",
            "        \"rules\": {",
            "            \"a11y\": {",
            "                \"useKeyWithClickEvents\": \"off\"",
            "            }",
            "        }",
            "    },",
            "    \"files\": {",
            "        \"ignore\": [\".pnp.cjs\", \".nuxt\", \"node_modules\", \".output\", \"dist\", \".git\", \"migrations\"],",
            "        \"ignoreUnknown\": true",
            "    },",
            "    \"vcs\": {",
            "        \"enabled\": true,",
            "        \"clientKind\": \"git\",",
            "        \"useIgnoreFile\": true",
            "    }",
            "    \"organizeImports\": {",
            "        \"enabled\": true",
            "    }",
            "}"
        ]
    },
    "giy": {
        "scope": "gitignore",
        "prefix": "gitignoreyarn",
        "body": [
            ".pnp.*",
            ".yarn/*",
            "!.yarn/patches",
            "!.yarn/plugins",
            "!.yarn/releases",
            "!.yarn/sdks",
            "!.yarn/versions"
        ],
        "description": "gitignore config for yarn without zero installs"
    },
    "giyzi": {
        "scope": "gitignore",
        "prefix": "gitignoreyarn",
        "body": [
            ".pnp.*",
            ".yarn/*",
            "!.yarn/patches",
            "!.yarn/plugins",
            "!.yarn/releases",
            "!.yarn/sdks",
            "!.yarn/versions"
        ],
        "description": "gitignore config for yarn with zero installs"
    },
    "pnpm-workspace.yaml": {
        "scope": "yaml",
        "prefix": "pnpm-ws",
        "body": [
            "packages:",
            "  - apps/*",
            "  - packages/*",
        ]
    }
}
