{
	// Place your global snippets here. Each snippet is defined under a snippet name and has a scope, prefix, body and 
	// description. Add comma separated ids of the languages where the snippet is applicable in the scope field. If scope 
	// is left empty or omitted, the snippet gets applied to all languages. The prefix is what is 
	// used to trigger the snippet and the body will be expanded and inserted. Possible variables are: 
	// $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders. 
	// Placeholders with the same ids are connected.
	// Example:
	// "Print to console": {
	// 	"scope": "javascript,typescript",
	// 	"prefix": "log",
	// 	"body": [
	// 		"console.log('$1');",
	// 		"$2"
	// 	],
	// 	"description": "Log output to console"
	// }
	// todo)) Turn this into an emmet abbreviation, or a snippet for all html languages
	"svelteScriptTs": {
		"scope": "svelte",
		"prefix": ["script:ts", ":ts"],
		"body": [
			"<script lang=\"ts\">",
			"$0",
			"</script>"
		]
	},
	"svelteEach": {
		"scope": "svelte",
		"prefix": ":each",
		"body": [
			"{#each ${1:expression} as ${2:name}}",
			"$0",
			"{/each}"
		]
	},
	"svelteElse": {
		"scope": "svelte",
		"prefix": ":else",
		"body": [
			"{:else}",
		]
	},
	"svelteIf": {
		"scope": "svelte",
		"prefix": ":if",
		"body": [
			"{#if ${1:expression}}",
			"$0",
			"{/if}"
		]
	},
	"svelteElseIf": {
		"scope": "svelte",
		"prefix": [":elseif", ":eif", ":elif"],
		"body": [
			"{:else if ${1:expression}}",
		]
	},
	"svelteAwait": {
		"scope": "svelte",
		"prefix": ":await",
		"body": [
			"{#await ${1:promise}}",
			"$0",
			"{/await}"
		]
	},
	"svelteThen": {
		"scope": "svelte",
		"prefix": ":then",
		"body": [
			"{:then ${1:value}}",
		]
	},
	"svelteCatch": {
		"scope": "svelte",
		"prefix": ":catch",
		"body": [
			"{:catch ${1:error}}",
		]
	},
	// ELEMENTS
	"svelteFragment": {
		"scope": "svelte",
		"prefix": [":fragment", ":sf"],
		"body": [
			"<svelte:fragment>",
			"$0",
			"</svelte:fragment>"
		]
	},
	"svelteFragmentWithSlot": {
		"scope": "svelte",
		"prefix": [":fragmentslot", ":sfs", ":sfn"],
		"body": [
			"<svelte:fragment slot=\"$1\">",
			"$0",
			"</svelte:fragment>"
		]
	}
}